name: Test Unity Package Workflow

on:
  pull_request:
    branches: [main]

jobs:
  testAllModes:
    name: Test Job for Unity Package in ${{ matrix.testMode }} üïπÔ∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
        - Packages/io.chainsafe.web3-unity
        publishPath:
        - ${GITHUB_WORKSPACE}/src/ChainSafe.Gaming.Unity/bin/Release/netstandard2.1/publish
        packageLibraryPath:
        - ${GITHUB_WORKSPACE}/Packages/io.chainsafe.web3-unity/Runtime/Libraries
        testMode:
          - PlayMode
          - EditMode
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: update submodules
        # clone submodules
        run: |
          git submodule update --init
        shell: bash
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore /property:Unity=true
      - name: Publish
        run: |
          dotnet publish --no-restore src/ChainSafe.Gaming.Unity/ChainSafe.Gaming.Unity.csproj -c Release /property:Unity=true
          echo Generated DLLs
          ls ${{ matrix.publishPath }}
      - name: Publish to Unity Package
        run: |
          rm -f ${{ matrix.publishPath }}/UnityEngine.dll
          mkdir -p ${{ matrix.packageLibraryPath }}
          rm -f ${{ matrix.packageLibraryPath }}/*
          cp ${{ matrix.publishPath }}/*.dll ${{ matrix.packageLibraryPath }}/
          echo Copied DLLs
          ls ${{ matrix.packageLibraryPath }}/
          cp ${GITHUB_WORKSPACE}/Packages/io.chainsafe.web3-unity/TestPackage~/package.json ${GITHUB_WORKSPACE}/Packages/io.chainsafe.web3-unity/package.json
        shell: bash
      - uses: game-ci/unity-test-runner@v3
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: '2021.3.22f1'
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;'
          packageMode: true
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}