name: Unity Tests ðŸ§ª

on:
  workflow_call:
  workflow_dispatch:

jobs:
  unity_tests:
    name: Unity Tests ðŸ§ª
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - src/UnitySampleProject
        testMode:
          - PlayMode
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: recursive
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Start Anvil
      run: |
        anvil --host 0.0.0.0 --fork-url https://rpc.ankr.com/eth_sepolia --mnemonic "test test test test test test test test test test test junk" &
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.projectPath }}/Library
        key: Library-${{ matrix.projectPath }}
        restore-keys: |
          Library-
    - uses: game-ci/unity-test-runner@v4
      id: tests
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        projectPath: ${{ matrix.projectPath }}
        testMode: ${{ matrix.testMode }}
        scopedRegistryUrl: https://package.openupm.com
        registryScopes: 'io.chainsafe.web3-unity, com.nethereum.unity'
        artifactsPath: ${{ matrix.testMode }}-artifacts
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        checkName: ${{ matrix.testMode }} Test Results
        coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;'
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results for ${{ matrix.testMode }}
        path: ${{ steps.tests.outputs.artifactsPath }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Coverage results for ${{ matrix.testMode }}
        path: ${{ steps.tests.outputs.coveragePath }}