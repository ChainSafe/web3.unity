{"version":3,"sources":["../../src/index.ts","../../src/provider.ts","../../src/utils.ts"],"names":["this"],"mappings":"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","file":"static/js/38.d24bddd6.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"SafeAppProvider\", { enumerable: true, get: function () { return provider_1.SafeAppProvider; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nclass SafeAppProvider {\n    constructor(safe, sdk) {\n        this.submittedTxs = new Map();\n        this.events = new events_1.EventEmitter();\n        this.safe = safe;\n        this.sdk = sdk;\n    }\n    async connect() {\n        this.events.emit('connect', { chainId: this.chainId });\n        return;\n    }\n    async disconnect() {\n        return;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    get chainId() {\n        return this.safe.chainId;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(request) {\n        const { method, params = [] } = request;\n        switch (method) {\n            case 'eth_accounts':\n                return [this.safe.safeAddress];\n            case 'net_version':\n            case 'eth_chainId':\n                return `0x${this.chainId.toString(16)}`;\n            case 'eth_sendTransaction':\n                const tx = Object.assign({ value: '0', data: '0x' }, params[0]);\n                const resp = await this.sdk.txs.send({\n                    txs: [tx],\n                });\n                // Store fake transaction\n                this.submittedTxs.set(resp.safeTxHash, {\n                    from: this.safe.safeAddress,\n                    hash: resp.safeTxHash,\n                    gas: 0,\n                    gasPrice: '0x00',\n                    nonce: 0,\n                    input: tx.data,\n                    value: tx.value,\n                    to: tx.to,\n                    blockHash: null,\n                    blockNumber: null,\n                    transactionIndex: null,\n                });\n                return resp.safeTxHash;\n            case 'eth_blockNumber':\n                const block = await this.sdk.eth.getBlockByNumber(['latest']);\n                return block.number;\n            case 'eth_getBalance':\n                return this.sdk.eth.getBalance([utils_1.getLowerCase(params[0]), params[1]]);\n            case 'eth_getCode':\n                return this.sdk.eth.getCode([utils_1.getLowerCase(params[0]), params[1]]);\n            case 'eth_getStorageAt':\n                return this.sdk.eth.getStorageAt([utils_1.getLowerCase(params[0]), params[1], params[2]]);\n            case 'eth_getBlockByNumber':\n                return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n            case 'eth_getBlockByHash':\n                return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n            case 'eth_getTransactionByHash':\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.transactionHash || txHash;\n                }\n                catch (e) { }\n                // Use fake transaction if we don't have a real tx hash\n                if (this.submittedTxs.has(txHash)) {\n                    return this.submittedTxs.get(txHash);\n                }\n                return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.hash = params[0];\n                    }\n                    return tx;\n                });\n            case 'eth_getTransactionReceipt': {\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.transactionHash || txHash;\n                }\n                catch (e) { }\n                return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.transactionHash = params[0];\n                    }\n                    return tx;\n                });\n            }\n            case 'eth_estimateGas': {\n                return 0;\n            }\n            case 'eth_call': {\n                return this.sdk.eth.call([params[0], params[1]]);\n            }\n            case 'eth_getLogs':\n                return this.sdk.eth.getPastLogs([params[0]]);\n            default:\n                throw Error(`\"${request.method}\" not implemented`);\n        }\n    }\n    // this method is needed for ethers v4\n    // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n    send(request, callback) {\n        if (!request)\n            callback('Undefined request');\n        this.request(request)\n            .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n            .catch((error) => callback(error, null));\n    }\n}\nexports.SafeAppProvider = SafeAppProvider;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLowerCase = void 0;\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nexports.getLowerCase = getLowerCase;\n//# sourceMappingURL=utils.js.map"],"sourceRoot":""}